import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error

# Load data (replace with actual mining data)
data = pd.read_csv("mining_data.csv")

# Features and labels
X = data[['temperature', 'power_consumption', 'voltage', 'fan_speed']]  # Example features
y = data['hash_rate']  # Target: hash rate

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize model
model = RandomForestRegressor(n_estimators=100, random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mae = mean_absolute_error(y_test, y_pred)
print(f"Mean Absolute Error: {mae}")

# Save model for future predictions
import joblib
joblib.dump(model, 'kohanax_model.pkl')
